version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: news-system-postgres
    environment:
      POSTGRES_DB: news_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d news_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: news-system-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: news-system-api
    environment:
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/news_system?sslmode=disable
      REDIS_ADDR: redis:6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LLM_MODEL: gpt-4o-mini
      PORT: 8080
      TRENDING_TTL: 120s
      TRENDING_WORKER_INTERVAL: 60s
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./news_data:/app/news_data:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
